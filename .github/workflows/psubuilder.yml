name: Build psubuilder

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          draft: true
          prerelease: false
          generate_release_notes: false

  build:
    name: Build release
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: linux
          - os: macos-latest
            release_suffix: macos
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          CGO_ENABLED=0 GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-amd64 ./cmd/psubuilder
          CGO_ENABLED=0 GOARCH=arm64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-aarch64 ./cmd/psubuilder
          zip -rj psubuilder-${{ github.ref_name }}-${{ matrix.release_suffix }}.zip out/*
      
      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          CGO_ENABLED=0 GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-amd64 ./cmd/psubuilder
          CGO_ENABLED=0 GOARCH=arm64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-arm64 ./cmd/psubuilder
          zip -rj psubuilder-${{ github.ref_name }}-${{ matrix.release_suffix }}.zip out/*

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          go env -w CGO_ENABLED=0
          go env -w GOARCH=amd64
          go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-amd64.exe ./cmd/psubuilder
          go env -w GOARCH=arm64
          go build -ldflags "-X main.Version=${{ github.ref_name }}" -o out/psubuilder-${{ github.ref_name }}-arm64.exe ./cmd/psubuilder
          Compress-Archive -Path out/*.exe -Destination psubuilder-${{ github.ref_name }}-${{ matrix.release_suffix }}.zip

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.tag-name }}
          draft: true
          files: psubuilder-*.zip
